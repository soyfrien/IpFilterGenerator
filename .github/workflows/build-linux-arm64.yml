name: Build Release & VirusTotal Scan (Linux Arm64)

permissions:
  contents: write

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
        matrix:
            include:
              - os: ubuntu-24.04
                runtime: linux-arm64
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
            ref: main
            fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Extract version
        id: version
        run: echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV

      - name: Download IP2Location database
        run: |
            curl -L -o db.zip https://download.ip2location.com/lite/IP2LOCATION-LITE-DB1.CSV.ZIP
            unzip db.zip -d IpFilterLib/Databases

      - name: Add .NET ILCompiler
        run: sed -i.bak '/<ItemGroup>/a \ <PackageReference Include="Microsoft.DotNet.ILCompiler; runtime.linux-arm64.Microsoft.DotNet.ILCompiler" Version="8.0.20" />' IpFilterConsole/IpFilterConsole.csproj

      - name: Add cross-compile support
        run: |
            sudo apt update -qq
            sudo apt install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu libc6-dev-arm64-cross
            sudo dpkg --add-architecture arm64
            sudo apt update -qq || true
            sudo bash -c 'cat > /etc/apt/sources.list.d/arm64.list <<EOF
            deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ noble main restricted
            deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ noble-updates main restricted
            deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ noble-backports main restricted universe multiverse
            EOF'
            sudo sed -i -e 's/deb http/deb [arch=amd64] http/g' /etc/apt/sources.list
            sudo sed -i -e 's/deb mirror/deb [arch=amd64] mirror/g' /etc/apt/sources.list
            sudo apt update -qq || true
            sudo apt install -y clang llvm binutils-aarch64-linux-gnu gcc-aarch64-linux-gnu zlib1g-dev:arm64

      - name: Publish self-contained binary
        run: |
          dotnet publish IpFilterConsole/IpFilterConsole.csproj \
            -c Release \
            -r ${{ matrix.runtime }} \
            --self-contained true \
            -p:Version=${{ env.VERSION }} \
            -o publish/${{ matrix.runtime }}

      - name: Zip binaries
        run: zip -j IpFilterConsole-${{ matrix.runtime }}.zip publish/${{ matrix.runtime }}/*

      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          files: ./IpFilterConsole-${{ matrix.runtime }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  VirusTotal_Scan:
    strategy:
        matrix:
            include:
              - os: ubuntu-latest
                runtime: linux-arm64

    runs-on: ${{ matrix.os }}
    needs: build

    steps:
      - name: Extract version
        id: version
        run: echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV

      - name: Download release
        run: |
          DL_LINK=https://github.com/soyfrien/IpFilterGenerator/releases/download/v${{ env.VERSION }}/IpFilterConsole-${{ matrix.runtime }}.zip
          VT_LINK=${{ steps.vt_linux.outputs.permalink }}
            for i in {1..3}; do
                sleep 10
                wget -O ./IpFilterConsole-${{ matrix.runtime }}.zip "$DL_LINK" && break
                echo "Attempt $i failed. Retrying..."
            done

            if [ ! -f ./IpFilterConsole-${{ matrix.runtime }}.zip ]; then
                echo "Download failed after 3 attempts."
                exit 1
            fi

      - name: VirusTotal Scan
        id: vt_linux
        uses: crazy-max/ghaction-virustotal@v4
        with:
            vt_api_key: ${{ secrets.VT_API_KEY }}
            files: ./IpFilterConsole-${{ matrix.runtime }}.zip


      - name: Update README
        run: |
            wget -O /var/tmp/README.md.tmp https://raw.githubusercontent.com/soyfrien/IpFilterGenerator/main/README.md
            sed -i "/build-linux-arm64.yml).*|.*|/c\\| [![Build Release & VirusTotal Scan (${{ matrix.runtime }})](https://github.com/soyfrien/IpFilterGenerator/actions/workflows/build-linux-arm64.yml/badge.svg)](https://github.com/soyfrien/IpFilterGenerator/actions/workflows/build-linux-arm64.yml) | [Scan Result](${VT_LINK}) | [Download](${DL_LINK}) |" /var/tmp/README.md.tmp

      - name: Checkout code
        uses: actions/checkout@v4
        with:
            ref: main
            fetch-depth: 0

      - name: Commit README update
        run: |
            git config --global user.name "github-actions"
            git config --global user.email "github-actions@github.com"
            git config pull.rebase false
            mv /var/tmp/README.md.tmp README.md
            git add README.md
            git commit -m "Update VirusTotal badge"
            git pull
            git push origin HEAD:main