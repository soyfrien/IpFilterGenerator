name: Build 🡢 Publish 🡢 Release (Linux Arm64)

permissions:
  contents: write

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
        matrix:
            include:
              - os: ubuntu-latest
                runtime: linux-arm64
              - os: ubtuntu-latest
                runtime: linux-musl-arm64
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Extract version
        id: version
        run: echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV

      - name: Download IP2Location database
        run: |
            curl -L -o db.zip https://download.ip2location.com/lite/IP2LOCATION-LITE-DB1.CSV.ZIP
            unzip db.zip -d IpFilterLib/Databases

      - name: Add .NET ILCompiler
        run: sed -i '/<ItemGroup>/a \ <PackageReference Include="Microsoft.DotNet.ILCompiler; runtime.linux-x64.Microsoft.DotNet.ILCompiler" Version="8.0.20" />' IpFilterConsole/IpFilterConsole.csproj
      
      - name: Install Common ARM64 Dev Libraries
        run: sudo apt install binutils-aarch64-linux-gnu gcc-aarch64-linux-gnu g++-aarch64-linux-gnu libc6-dev-arm64-cross zlib1g-dev libc6-dev-arm64-cross libgcc-12-dev-arm64-cross libstdc++-12-dev-arm64-cross -y

      - name: Force correct linker
        run: echo "LD=/usr/bin/aarch64-linux-gnu-ld" >> $GITHUB_ENV; echo "CC=aarch64-linux-gnu-gcc" >> $GITHUB_ENV; echo "CXX=aarch64-linux-gnu-g++" >> $GITHUB_ENV; echo "SYSROOT=$(pwd)/arm64-rootfs" >> $GITHUB_ENV

      - name: Install minimal rootfs
        run: wget http://cdimage.ubuntu.com/ubuntu-base/releases/25.04/release/ubuntu-base-25.04-base-arm64.tar.gz; mkdir arm64-rootfs; tar -xzf ubuntu-base-25.04-base-arm64.tar.gz -C arm64-rootfs

      - name: Publish self-contained binary
        run: |
          dotnet publish IpFilterConsole/IpFilterConsole.csproj \
            -c Release \
            -r ${{ matrix.runtime }} \
            --self-contained true \
            -p:Version=${{ env.VERSION }} \
            -o publish/${{ matrix.runtime }}

      - name: Zip binaries
        run: |
          zip -j IpFilterConsole-${{ matrix.runtime }}.zip publish/${{ matrix.runtime }}/*

      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./IpFilterConsole-${{ matrix.runtime }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}