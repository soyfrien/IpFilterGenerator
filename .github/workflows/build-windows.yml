name: Build 🡢 Publish 🡢 Release (Windows)

permissions:
  contents: write

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
        matrix:
            include:
              - os: windows-latest
                runtime: win-x64
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Extract version
        id: version
        run: echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV

      - name: Download IP2Location database
        run: |
            curl -L -o db.zip https://download.ip2location.com/lite/IP2LOCATION-LITE-DB1.CSV.ZIP
            unzip db.zip -d IpFilterLib/Databases

      - name: Publish self-contained binary
        run: |
          dotnet publish IpFilterConsole/IpFilterConsole.csproj -c Release -r win-x64 -o publish/win-x64

      - name: Zip binaries
        run: |          
            Compress-Archive -Path publish/win-x64/IpFilterConsole.exe -DestinationPath IpFilterConsole-win-x64.zip

      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./IpFilterConsole-win-x64.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: VirusTotal Scan
        id: vt_windows
        uses: crazy-max/ghaction-virustotal@v4
        with:
            vt_api_key: ${{ secrets.VT_API_KEY }}
            files: ./IpFilterConsole-${{ matrix.runtime }}.zip

      - name: Get release asset URL
        id: asset_windows
        run: |
            asset_url=$(gh release view ${{ github.ref_name }} --json assets -q '.assets[] | select(.name == "./IpFilterConsole-${{ matrix.runtime }}.zip) | .url')
            echo "asset_url=$asset_url" >> $GITHUB_OUTPUT

      - name: Update README
        run: |
            VT_LINK="${{ steps.vt_windows.outputs.permalink }}"
            DL_LINK="${{ steps.asset_windows.outputs.asset_url }}"
            sed -i "/build-windows.yml\).*\|.*\|/c\\| [![Build 🡢 Publish 🡢 Release (Windows)](https://github.com/soyfrien/IpFilterGenerator/actions/workflows/build-windows.yml/badge.svg)](https://github.com/soyfrien/IpFilterGenerator/actions/workflows/build-windows.yml) | [Scan Result](${VT_LINK}) | [Download](${DL_LINK}) |" README.md